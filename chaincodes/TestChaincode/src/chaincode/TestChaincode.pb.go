//Copyright (c) Luxoft 2018
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

//     http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: TestChaincode.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	TestChaincode.proto

It has these top-level messages:
	Entity
	GetEntity
	HistoryItem
	History
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Type int32

const (
	Type_DEFAULT Type = 0
	Type_COMPANY Type = 1
	Type_USER    Type = 2
)

var Type_name = map[int32]string{
	0: "DEFAULT",
	1: "COMPANY",
	2: "USER",
}
var Type_value = map[string]int32{
	"DEFAULT": 0,
	"COMPANY": 1,
	"USER":    2,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}
func (Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Entity struct {
	Name        string `protobuf:"bytes,1,opt,name=Name,json=name" json:"Name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=Description,json=description" json:"Description,omitempty"`
	Type        Type   `protobuf:"varint,3,opt,name=type,enum=main.Type" json:"type,omitempty"`
}

func (m *Entity) Reset()                    { *m = Entity{} }
func (m *Entity) String() string            { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()               {}
func (*Entity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Entity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Entity) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Entity) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_DEFAULT
}

type GetEntity struct {
	Name string `protobuf:"bytes,1,opt,name=Name,json=name" json:"Name,omitempty"`
}

func (m *GetEntity) Reset()                    { *m = GetEntity{} }
func (m *GetEntity) String() string            { return proto.CompactTextString(m) }
func (*GetEntity) ProtoMessage()               {}
func (*GetEntity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetEntity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HistoryItem struct {
	TxId      string  `protobuf:"bytes,1,opt,name=TxId,json=txId" json:"TxId,omitempty"`
	Value     *Entity `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Timestamp int64   `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	IsDelete  bool    `protobuf:"varint,4,opt,name=isDelete" json:"isDelete,omitempty"`
}

func (m *HistoryItem) Reset()                    { *m = HistoryItem{} }
func (m *HistoryItem) String() string            { return proto.CompactTextString(m) }
func (*HistoryItem) ProtoMessage()               {}
func (*HistoryItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *HistoryItem) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *HistoryItem) GetValue() *Entity {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *HistoryItem) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *HistoryItem) GetIsDelete() bool {
	if m != nil {
		return m.IsDelete
	}
	return false
}

type History struct {
	History []*HistoryItem `protobuf:"bytes,1,rep,name=history" json:"history,omitempty"`
	Key     string         `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
}

func (m *History) Reset()                    { *m = History{} }
func (m *History) String() string            { return proto.CompactTextString(m) }
func (*History) ProtoMessage()               {}
func (*History) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *History) GetHistory() []*HistoryItem {
	if m != nil {
		return m.History
	}
	return nil
}

func (m *History) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func init() {
	proto.RegisterType((*Entity)(nil), "main.Entity")
	proto.RegisterType((*GetEntity)(nil), "main.GetEntity")
	proto.RegisterType((*HistoryItem)(nil), "main.HistoryItem")
	proto.RegisterType((*History)(nil), "main.History")
	proto.RegisterEnum("main.Type", Type_name, Type_value)
}

func init() { proto.RegisterFile("TestChaincode.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x51, 0x4d, 0x4f, 0xc2, 0x40,
	0x10, 0x15, 0x5a, 0xf9, 0x98, 0xaa, 0xa9, 0xeb, 0xa5, 0x31, 0x46, 0x49, 0x4f, 0x06, 0x93, 0x1e,
	0xf0, 0xe0, 0x99, 0x2f, 0x85, 0x44, 0xd1, 0xac, 0xe5, 0xa0, 0x07, 0x93, 0x52, 0x86, 0xb0, 0xa1,
	0xed, 0x36, 0xed, 0x60, 0xe8, 0xc9, 0xbf, 0xee, 0xb6, 0x05, 0xd1, 0x83, 0xb7, 0x37, 0xef, 0x4d,
	0xf6, 0xbd, 0xd9, 0x07, 0x67, 0x2e, 0xa6, 0xd4, 0x5f, 0x7a, 0x22, 0xf2, 0xe5, 0x1c, 0x9d, 0x38,
	0x91, 0x24, 0x99, 0x1e, 0xaa, 0xd9, 0xfe, 0x80, 0xda, 0x30, 0x22, 0x41, 0x19, 0x63, 0xa0, 0x4f,
	0xbc, 0x10, 0xad, 0x4a, 0xab, 0x72, 0xdd, 0xe4, 0x7a, 0xa4, 0x30, 0x6b, 0x81, 0x31, 0xc0, 0xd4,
	0x4f, 0x44, 0x4c, 0x42, 0x46, 0x56, 0xb5, 0x90, 0x8c, 0xf9, 0x9e, 0x62, 0x97, 0xa0, 0x53, 0x16,
	0xa3, 0xa5, 0x29, 0xe9, 0xa4, 0x03, 0x4e, 0xfe, 0xa8, 0xe3, 0x2a, 0x86, 0x17, 0xbc, 0x7d, 0x05,
	0xcd, 0x07, 0xa4, 0xff, 0x2d, 0xec, 0x2f, 0x30, 0x46, 0x22, 0x25, 0x99, 0x64, 0x63, 0xc2, 0x30,
	0x5f, 0x71, 0x37, 0xe3, 0xf9, 0x6e, 0x85, 0x14, 0x66, 0x36, 0x1c, 0x7e, 0x7a, 0xc1, 0x1a, 0x0b,
	0x7f, 0xa3, 0x73, 0x54, 0x9a, 0x94, 0x6f, 0xf2, 0x52, 0x62, 0x17, 0xd0, 0x24, 0x11, 0xaa, 0x33,
	0xbd, 0x30, 0x2e, 0xc2, 0x68, 0x7c, 0x4f, 0xb0, 0x73, 0x68, 0x88, 0x74, 0x80, 0x01, 0x12, 0x5a,
	0xba, 0x12, 0x1b, 0xfc, 0x67, 0xb6, 0x47, 0x50, 0xdf, 0x06, 0x60, 0x37, 0x50, 0x5f, 0x96, 0x50,
	0xf9, 0x6b, 0xca, 0xea, 0xb4, 0xb4, 0xfa, 0x15, 0x90, 0xef, 0x36, 0x98, 0x09, 0xda, 0x0a, 0xb3,
	0xed, 0x9f, 0xe4, 0xb0, 0xdd, 0x56, 0xd9, 0xd5, 0xcd, 0xcc, 0x80, 0xfa, 0x60, 0x78, 0xdf, 0x9d,
	0x3e, 0xba, 0xe6, 0x41, 0x3e, 0xf4, 0x9f, 0x9f, 0x5e, 0xba, 0x93, 0x37, 0xb3, 0xc2, 0x1a, 0xa0,
	0x4f, 0x5f, 0x87, 0xdc, 0xac, 0xf6, 0xee, 0xa0, 0xe5, 0xcb, 0xd0, 0x09, 0xd6, 0x1b, 0xb9, 0x20,
	0x27, 0x5d, 0xe5, 0x59, 0x64, 0xe4, 0x2c, 0xbc, 0x59, 0x22, 0xfc, 0xb2, 0xa1, 0xde, 0xf1, 0x9f,
	0xda, 0xde, 0x8b, 0xc2, 0x66, 0xb5, 0x42, 0xbb, 0xfd, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xa3, 0xdf,
	0x92, 0x4a, 0xd4, 0x01, 0x00, 0x00,
}
