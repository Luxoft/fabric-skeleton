---
# PROJECT SPECIFIC PART

- name: Calculate nice network_dir path
  hosts: localhost:business_nodes
  tasks:
    - set_fact:
        actual_network_dir: "{% if network_dir[0] == '/' or network_dir[0] == '~' %}{{network_dir}}{% else %}../{{network_dir}}{% endif %}"
      when: network_dir is defined
    - set_fact:
        actual_network_dir: "../network_dist"
      when: network_dir is not defined

#################
# Place here your ansible stuff for business logic

- name: Create fabric.yaml from template
  hosts: localhost
  tasks:
    - template: src=../generator/fabric.yaml.j2 dest="{{actual_network_dir}}/fabric.yaml"

- name: Copy Fabric configurator stuff
  hosts: business_nodes[0]
  tasks:
    - synchronize:
        src: "../configurator/"
        dest: "~/configurator/"

- name: Copy network for configurator
  hosts: business_nodes[0]
  tasks:
    - synchronize:
        src: "{{ actual_network_dir }}/"
        dest: "~/configurator/network/"

- name: Copy chaincodes for configurator
  hosts: business_nodes[0]
  tasks:
    - synchronize:
        src: "../../chaincodes/"
        dest: "~/configurator/chaincodes/"

- name: Copy fabric.yaml for configurator
  hosts: business_nodes[0]
  tasks:
    - synchronize:
        src: "{{ actual_network_dir }}/fabric.yaml"
        dest: "~/configurator/fabric.yaml"

- name: Build configurator image
  hosts: business_nodes[0]
  tasks:
    - docker_image:
        state: present
        force: true
        dockerfile: "Dockerfile"
        path: "~/configurator"
        name: blockchain/configurator

- name: Run configurator container
  hosts: business_nodes[0]
  tasks:
    - docker_container:
        name: "configurator"
        image: "blockchain/configurator"
        state: started
        restart: yes
        recreate: yes
      become: yes

- name: Check configurator container is running
  hosts: business_nodes[0]
  tasks:
    - name: Wait some time while configurator works
      command: sleep 5
    - name: Execute docker ps
      command: docker ps -q
      register: business_node_docker_status
    - fail:
        msg: "Docker container for business node is not alive"
      when: business_node_docker_status.stdout == ""
